{"ast":null,"code":"var _jsxFileName = \"/Users/ally/Documents/BrownCS/cs1300/uiux-development/album-browser/src/components/song.js\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport Col from 'react-bootstrap/Col';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Song(props) {\n  return /*#__PURE__*/_jsxDEV(Col, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        width: '15rem',\n        padding: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n        variant: \"top\",\n        src: props.item.image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          children: props.item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: props.item.artist\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [props.item.minutes, \":\", props.item.seconds.toLocaleString('en-US', {\n            minimumIntegerDigits: 2,\n            useGrouping: false\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: () => {\n            props.cartAdder(props.item);\n          },\n          children: \"Add To playlist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 7\n  }, this);\n}\n_c = Song;\nvar _c;\n$RefreshReg$(_c, \"Song\");","map":{"version":3,"names":["Button","Card","Col","jsxDEV","_jsxDEV","Song","props","children","style","width","padding","Img","variant","src","item","image","fileName","_jsxFileName","lineNumber","columnNumber","Body","Title","name","Text","artist","minutes","seconds","toLocaleString","minimumIntegerDigits","useGrouping","onClick","cartAdder","_c","$RefreshReg$"],"sources":["/Users/ally/Documents/BrownCS/cs1300/uiux-development/album-browser/src/components/song.js"],"sourcesContent":["import 'bootstrap/dist/css/bootstrap.min.css'\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\nimport Col from 'react-bootstrap/Col';\n\nexport default function Song(props){\n    return(\n      <Col>\n        <Card style={{ width: '15rem', padding: '20px'}}>\n          <Card.Img variant=\"top\" src={props.item.image} />\n          <Card.Body>\n              <Card.Title>{props.item.name}</Card.Title>\n              <Card.Text>\n              {props.item.artist}\n              </Card.Text>\n              <Card.Text>\n              {props.item.minutes}:{(props.item.seconds).toLocaleString('en-US', {\n                minimumIntegerDigits: 2,\n                useGrouping: false\n              })}\n              </Card.Text>\n              <Button variant=\"primary\" onClick={() => {\n                props.cartAdder(props.item)\n              }}>Add To playlist</Button>\n        </Card.Body>\n      </Card>\n      </Col>\n    );\n}"],"mappings":";AAAA,OAAO,sCAAsC;AAC7C,OAAOA,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,IAAI,MAAM,sBAAsB;AACvC,OAAOC,GAAG,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,eAAe,SAASC,IAAIA,CAACC,KAAK,EAAC;EAC/B,oBACEF,OAAA,CAACF,GAAG;IAAAK,QAAA,eACFH,OAAA,CAACH,IAAI;MAACO,KAAK,EAAE;QAAEC,KAAK,EAAE,OAAO;QAAEC,OAAO,EAAE;MAAM,CAAE;MAAAH,QAAA,gBAC9CH,OAAA,CAACH,IAAI,CAACU,GAAG;QAACC,OAAO,EAAC,KAAK;QAACC,GAAG,EAAEP,KAAK,CAACQ,IAAI,CAACC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACjDf,OAAA,CAACH,IAAI,CAACmB,IAAI;QAAAb,QAAA,gBACNH,OAAA,CAACH,IAAI,CAACoB,KAAK;UAAAd,QAAA,EAAED,KAAK,CAACQ,IAAI,CAACQ;QAAI;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAa,CAAC,eAC1Cf,OAAA,CAACH,IAAI,CAACsB,IAAI;UAAAhB,QAAA,EACTD,KAAK,CAACQ,IAAI,CAACU;QAAM;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACP,CAAC,eACZf,OAAA,CAACH,IAAI,CAACsB,IAAI;UAAAhB,QAAA,GACTD,KAAK,CAACQ,IAAI,CAACW,OAAO,EAAC,GAAC,EAAEnB,KAAK,CAACQ,IAAI,CAACY,OAAO,CAAEC,cAAc,CAAC,OAAO,EAAE;YACjEC,oBAAoB,EAAE,CAAC;YACvBC,WAAW,EAAE;UACf,CAAC,CAAC;QAAA;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACS,CAAC,eACZf,OAAA,CAACJ,MAAM;UAACY,OAAO,EAAC,SAAS;UAACkB,OAAO,EAAEA,CAAA,KAAM;YACvCxB,KAAK,CAACyB,SAAS,CAACzB,KAAK,CAACQ,IAAI,CAAC;UAC7B,CAAE;UAAAP,QAAA,EAAC;QAAe;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEZ;AAACa,EAAA,GAvBuB3B,IAAI;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}