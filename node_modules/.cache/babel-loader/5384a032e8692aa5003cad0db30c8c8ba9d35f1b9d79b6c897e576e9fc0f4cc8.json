{"ast":null,"code":"var _jsxFileName = \"/Users/ally/Documents/BrownCS/cs1300/uiux-development/album-browser/src/components/song-list.js\";\nimport songData from '../assets/all-songs.json';\nimport { timeInSeconds, compare } from './util';\nimport Song from './song.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SongList(props) {\n  var finalList = [...songData];\n  if (props.lengthFilter) {\n    var newList = [];\n    for (const index in finalList) {\n      const item = finalList[index];\n      if (timeInSeconds(item.minutes, item.seconds) <= props.length) {\n        newList.push(item);\n      }\n    }\n    finalList = newList;\n  }\n  var newList = [];\n  for (const index in finalList) {\n    const item = finalList[index];\n    if (props.artists[item.artist] == true) {\n      newList.push(item);\n    }\n  }\n  finalList = newList;\n  if (props.sort) {\n    if (props.ascending) {\n      finalList.sort(compareAscend);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: finalList.map((song, index) => /*#__PURE__*/_jsxDEV(Song, {\n      item: song\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n_c = SongList;\nvar _c;\n$RefreshReg$(_c, \"SongList\");","map":{"version":3,"names":["songData","timeInSeconds","compare","Song","jsxDEV","_jsxDEV","SongList","props","finalList","lengthFilter","newList","index","item","minutes","seconds","length","push","artists","artist","sort","ascending","compareAscend","children","map","song","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ally/Documents/BrownCS/cs1300/uiux-development/album-browser/src/components/song-list.js"],"sourcesContent":["import songData from '../assets/all-songs.json';\nimport { timeInSeconds, compare } from './util';\nimport Song from './song.js';\n\nexport default function SongList(props){\n    var finalList = [...songData];\n    if(props.lengthFilter){\n        var newList = [];\n        for (const index in finalList){\n            const item = finalList[index];\n            if(timeInSeconds(item.minutes, item.seconds) <= props.length){\n                newList.push(item);\n            }\n        }\n        finalList = newList;\n    }\n    var newList = [];\n    for (const index in finalList){\n        const item = finalList[index];\n        if(props.artists[item.artist] == true){\n            newList.push(item);\n        }\n    }\n    finalList = newList;\n    if(props.sort){\n        if(props.ascending){\n            finalList.sort(compareAscend);\n        }\n    }\n    return (\n        <div>\n            {finalList.map((song, index) => (\n        <Song item={song}/>\n      ))}\n        </div>\n    );\n}"],"mappings":";AAAA,OAAOA,QAAQ,MAAM,0BAA0B;AAC/C,SAASC,aAAa,EAAEC,OAAO,QAAQ,QAAQ;AAC/C,OAAOC,IAAI,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,eAAe,SAASC,QAAQA,CAACC,KAAK,EAAC;EACnC,IAAIC,SAAS,GAAG,CAAC,GAAGR,QAAQ,CAAC;EAC7B,IAAGO,KAAK,CAACE,YAAY,EAAC;IAClB,IAAIC,OAAO,GAAG,EAAE;IAChB,KAAK,MAAMC,KAAK,IAAIH,SAAS,EAAC;MAC1B,MAAMI,IAAI,GAAGJ,SAAS,CAACG,KAAK,CAAC;MAC7B,IAAGV,aAAa,CAACW,IAAI,CAACC,OAAO,EAAED,IAAI,CAACE,OAAO,CAAC,IAAIP,KAAK,CAACQ,MAAM,EAAC;QACzDL,OAAO,CAACM,IAAI,CAACJ,IAAI,CAAC;MACtB;IACJ;IACAJ,SAAS,GAAGE,OAAO;EACvB;EACA,IAAIA,OAAO,GAAG,EAAE;EAChB,KAAK,MAAMC,KAAK,IAAIH,SAAS,EAAC;IAC1B,MAAMI,IAAI,GAAGJ,SAAS,CAACG,KAAK,CAAC;IAC7B,IAAGJ,KAAK,CAACU,OAAO,CAACL,IAAI,CAACM,MAAM,CAAC,IAAI,IAAI,EAAC;MAClCR,OAAO,CAACM,IAAI,CAACJ,IAAI,CAAC;IACtB;EACJ;EACAJ,SAAS,GAAGE,OAAO;EACnB,IAAGH,KAAK,CAACY,IAAI,EAAC;IACV,IAAGZ,KAAK,CAACa,SAAS,EAAC;MACfZ,SAAS,CAACW,IAAI,CAACE,aAAa,CAAC;IACjC;EACJ;EACA,oBACIhB,OAAA;IAAAiB,QAAA,EACKd,SAAS,CAACe,GAAG,CAAC,CAACC,IAAI,EAAEb,KAAK,kBAC/BN,OAAA,CAACF,IAAI;MAACS,IAAI,EAAEY;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CACnB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAEd;AAACC,EAAA,GAhCuBvB,QAAQ;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}